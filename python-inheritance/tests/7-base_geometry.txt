The ``7-base_geometry`` module
======================

Using ``BaseGeometry``
-------------------

This is an example text file in reStructuredText format.  First import
``BaseGeometry`` from the ``7-base_geometry`` module:

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Now use it:
    """ integer correct """
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("my_int", 12)

    """ not is integer """
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", "John")
    Traceback (most recent call last):
    ´´´
    TypeError: name must be an integer

    """ not is negative """
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("negative", -5)
    Traceback (most recent call last):
    ´´´
    ValueError: negative must be greater than 0

    """ Try to for integer string """
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", "4")
    Traceback (most recent call last):
    ´´´
    TypeError: name must be an integer

    """ Try to for a boolean """
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", False)
    Traceback (most recent call last):
    ´´´
    TypeError: name must be an integer

    """ Try to for equals to 0 """
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", 0)
    Traceback (most recent call last):
    ´´´
    ValueError: name must be greater than 0

    """ Try to for a tuple """
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", (1,))
    Traceback (most recent call last):
    ´´´
    TypeError: name must be an integer

    """ Try to for a list """
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", [4, 5])
    Traceback (most recent call last):
    ´´´
    TypeError: name must be an integer

    """ Try to for a set """
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", {4, 5})
    Traceback (most recent call last):
    ´´´
    TypeError: name must be an integer

    """ Try to for with None """
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", None)
    Traceback (most recent call last):
    ´´´
    TypeError: name must be an integer

    """ Try to for a only parameter"""
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name")
    Traceback (most recent call last):
    ´´´
    TypeError: integer_validator() missing 1 required positional argument: 'value'

    """ Try to for nothing parameter """
    >>> bg = BaseGeometry()
    >>> bg.integer_validator()
    Traceback (most recent call last):
    ´´´
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

    """ Try to for print area"""
    >>> bg = BaseGeometry()
    >>> bg.area()
    Traceback (most recent call last):
    ´´´
    Exception: area() is not implemented
